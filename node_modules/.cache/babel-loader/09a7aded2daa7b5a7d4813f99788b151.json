{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial, UniformsUtils } from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, _ref) => {\n          let [name, value] = _ref;\n          const uniform = UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return _extends({}, acc, uniform);\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(_ref2 => {\n        let [name] = _ref2;\n        return Object.defineProperty(this, name, {\n          get: () => this.uniforms[name].value,\n          set: v => this.uniforms[name].value = v\n        });\n      });\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };","map":{"version":3,"sources":["/home/marie/Documents/code/personnal_website/node_modules/@react-three/drei/core/shaderMaterial.js"],"names":["_extends","ShaderMaterial","UniformsUtils","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","constructor","entries","Object","reduce","acc","name","value","uniform","clone","forEach","defineProperty","get","set","v"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,OAA9C;;AAEA,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,YAAlC,EAAgDC,cAAhD,EAAgEC,MAAhE,EAAwE;AACtE,SAAO,cAAcN,cAAd,CAA6B;AAClCO,IAAAA,WAAW,GAAG;AACZ,YAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeL,QAAf,CAAhB,CADY,CAC8B;;AAE1C,YAAM;AACJA,QAAAA,QAAQ,EAAEK,OAAO,CAACE,MAAR,CAAe,CAACC,GAAD,WAAwB;AAAA,cAAlB,CAACC,IAAD,EAAOC,KAAP,CAAkB;AAC/C,gBAAMC,OAAO,GAAGb,aAAa,CAACc,KAAd,CAAoB;AAClC,aAACH,IAAD,GAAQ;AACNC,cAAAA;AADM;AAD0B,WAApB,CAAhB;AAKA,iBAAOd,QAAQ,CAAC,EAAD,EAAKY,GAAL,EAAUG,OAAV,CAAf;AACD,SAPS,EAOP,EAPO,CADN;AASJV,QAAAA,YATI;AAUJC,QAAAA;AAVI,OAAN,EAHY,CAcR;;AAEJG,MAAAA,OAAO,CAACQ,OAAR,CAAgB;AAAA,YAAC,CAACJ,IAAD,CAAD;AAAA,eAAYH,MAAM,CAACQ,cAAP,CAAsB,IAAtB,EAA4BL,IAA5B,EAAkC;AAC5DM,UAAAA,GAAG,EAAE,MAAM,KAAKf,QAAL,CAAcS,IAAd,EAAoBC,KAD6B;AAE5DM,UAAAA,GAAG,EAAEC,CAAC,IAAI,KAAKjB,QAAL,CAAcS,IAAd,EAAoBC,KAApB,GAA4BO;AAFsB,SAAlC,CAAZ;AAAA,OAAhB;AAIA,UAAId,MAAJ,EAAYA,MAAM,CAAC,IAAD,CAAN;AACb;;AAtBiC,GAApC;AAyBD;;AAED,SAASJ,cAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial, UniformsUtils } from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return _extends({}, acc, uniform);\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };\n"]},"metadata":{},"sourceType":"module"}